"use strict";function _classCallCheck(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,r){for(var t=0;t<r.length;t++){var s=r[t];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(e,s.key,s)}}function _createClass(e,r,t){return r&&_defineProperties(e.prototype,r),t&&_defineProperties(e,t),e}var ProgressBar=function(){function s(e,r,t){_classCallCheck(this,s),this.progressBar=e,this.skillName=t,this.fill=r,this.speed=15,this.actual=0,this.filling()}return _createClass(s,[{key:"filling",value:function(){var e=this;this.actual<this.fill&&(this.progressBar.style.width=String(this.actual++)+"%",this.progressBar.innerHTML=this.skillName+String(this.actual)+"%",setTimeout(function(){return e.filling()},this.speed))}}]),s}(),options={threshold:0,rootMargin:"0px 0px -30% 0px"},progressBars=document.querySelectorAll(".progress"),observer=new IntersectionObserver(function(e){e.forEach(function(e){var r,t;e.isIntersecting&&(r=e.target.getAttribute("data-fill"),t=e.target.innerHTML,setTimeout(function(){return new ProgressBar(e.target,r,t)},1500),observer.unobserve(e.target))})},options);progressBars.forEach(function(e){return observer.observe(e)});